{"version":3,"sources":["../node_modules/gun sync","fleekchat.png","containers/Dashboard.tsx","themes/jadeTheme.ts","i18n.ts","translations/en.ts","translations/kr.ts","translations/cn.ts","containers/LanguageMenu/index.tsx","containers/LanguageMenu/LanguageMenu.tsx","helpers/createPreserveHistory.ts","stores/useSpaceUserStore.ts","hooks/useSpaceUser.ts","components/LoginDialog/LoginDialog.tsx","App.tsx","index.tsx"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","props","lightTheme","responsiveFontSizes","createMuiTheme","MuiAppBar","position","MuiCard","elevation","overrides","root","background","palette","default","darkTheme","type","grey","paper","MuiTable","MuiTypography","color","momentMap","i18n","use","LanguageDetector","initReactI18next","init","resources","en","translation","kr","cn","interpolation","escapeValue","format","value","lng","ln","moment","locale","reverseSupportedLanguages","supportedLanguages","LanguageMenu","useTranslation","t","React","anchorEl","setAnchorEl","Tooltip","title","Button","onClick","event","currentTarget","language","Menu","keepMounted","open","Boolean","onClose","Object","values","map","lang","i","MenuItem","changeLanguage","handleMenuItemClick","preserveQueryParameters","history","preserve","location","currentQuery","queryString","parse","window","search","preservedQuery","p","v","assign","stringify","createLocationDescriptorObject","state","pathname","createStore","createHistory","queryParameters","useState","users","setUsers","user","setUser","loginInfo","setLoginInfo","registerInfo","setRegisterInfo","useEffect","bs","BrowserStorage","a","Users","withStorage","endpoint","asyncStuff","undefined","authdUsers","list","length","recoverKeysByPassphrase","uuid","passphrase","backupType","then","createIdentity","ident","authenticate","authdUser","useSpaceUser","LoginDialog","setUuid","setPassphrase","VaultBackupType","Email","setBackupType","Dialog","onCancel","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","label","fullWidth","onChange","target","defaultValue","DialogActions","li","onRegister","onLogin","createBrowserHistory","options","oldPush","push","oldReplace","replace","path","apply","App","darkMode","useDarkMode","theme","useSpaceUserStore","loginDialogOpen","setLoginDialogOpen","useInterval","UserStorage","listDirectory","bucket","res","ThemeProvider","AppBar","Toolbar","Grid","justify","alignItems","alignContent","container","item","style","marginTop","Link","component","className","children","to","alt","height","marginRight","src","fleekChatLogo","Typography","variant","IconButton","toggle","ReactRouterRoute","Route","CssBaseline","Dashboard","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e53829b0.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 273;","module.exports = __webpack_public_path__ + \"static/media/fleekchat.fe9d286b.png\";","import * as React from \"react\";\n/* import { useTheme } from \"@material-ui/styles\";\n * import getTheme from \"../themes/victoryTheme\"; */\n/* import { useTranslation } from \"react-i18next\"; */\n\n/* const useState = React.useState; */\n\nexport default (props: any) => {\n  /* const { t } = useTranslation(); */\n\n  return (\n    <div></div>\n  );\n};\n","import { createMuiTheme, responsiveFontSizes } from \"@material-ui/core/styles\";\nimport grey from \"@material-ui/core/colors/grey\";\n\nexport const lightTheme = responsiveFontSizes(createMuiTheme({\n  props: {\n    MuiAppBar: {\n      position: \"sticky\",\n    },\n    MuiCard: {\n      elevation: 0,\n    },\n  },\n  overrides: {\n    MuiAppBar: {\n      root: {\n        background: \"#fff !important\",\n      },\n    },\n  },\n  palette: {\n    background: {\n      default: \"#fff\",\n    },\n  },\n}));\n\nexport const darkTheme = responsiveFontSizes(createMuiTheme({\n  props: {\n    MuiAppBar: {\n      position: \"sticky\",\n    },\n    MuiCard: {\n      elevation: 0,\n    },\n  },\n  palette: {\n    type: \"dark\",\n    background: {\n      default: grey[900],\n      paper: grey[800],\n    },\n  },\n  overrides: {\n    MuiTable: {\n      root: {\n        background: \"transparent !important\",\n      },\n    },\n    MuiTypography: {\n      root: {\n        color: grey[400],\n      },\n    },\n  },\n}));\n\nexport default {\n  darkTheme,\n  lightTheme,\n};\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport enJSON from \"./translations/en\";\nimport krJSON from \"./translations/kr\";\nimport cnJSON from \"./translations/cn\";\nimport moment from \"moment\";\nimport \"moment/locale/ko\";\nimport \"moment/locale/zh-cn\";\nimport \"moment/locale/en-ca\";\nimport i18next from \"i18next\";\n\ninterface IMap {\n  [key: string]: string;\n}\n\nconst momentMap: IMap = {\n  \"kr\": \"ko\",\n  \"cn\": \"zh-cn\",\n  \"en-US\": \"en-ca\",\n};\n\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    resources: {\n      en: { translation: enJSON },\n      kr: { translation: krJSON },\n      cn: { translation: cnJSON },\n    },\n    interpolation: {\n      escapeValue: false,\n      format: (value, format, lng) => {\n        if (!lng) {\n          return;\n        }\n        if (format !== \"date\") {\n          return;\n        }\n        const ln = momentMap[lng];\n        const result = moment(value).locale(ln || \"en\").format(\"MMMM Do YYYY, h:mm:ss a\");\n        return result as any;\n      },\n    },\n  });\n\nexport const reverseSupportedLanguages: IMap = {\n  \"EN\": \"en-US\", //tslint:disable-line\n  \"中文\": \"cn\", //tslint:disable-line\n  \"한국어\": \"kr\", //tslint:disable-line\n};\n\nexport const supportedLanguages: IMap = {\n  \"en-US\": \"EN\",\n  \"cn\": \"中文\",\n  \"kr\": \"한국어\",\n};\n\nexport const changeLanguage = (l: string) => {\n  return i18next.changeLanguage(l);\n};\n","export default {\n  // Moment integration\n  \"Timestamp Date\": \"{{date, date}}\",\n  \"Change Language\": \"Change Language\",\n  \"Enter an Address, Transaction Hash or Block Number\": \"🔎 Enter an Address, Transaction Hash or Block Number\",\n  \"JSON-RPC API Documentation\": \"JSON-RPC API Documentation\",\n  \"Expedition Github\": \"Expedition Github\",\n  \"Toggle Dark Mode\": \"Toggle Dark Mode\",\n  \"Block Height\": \"Block Height\",\n  \"Chain ID\": \"Chain ID\",\n  \"Syncing\": \"Syncing\",\n  \"Gas Price\": \"Gas Price\",\n  \"Network Hash Rate\": \"Network Hash Rate\",\n  \"Peers\": \"Peers\",\n  \"Hash Rate\": \"Hash Rate\",\n  \"Transaction Count\": \"Transaction Count\",\n  \"Gas Usage\": \"Gas Usage\",\n  \"Uncles\": \"Uncles\",\n  \"Top Miners\": \"Top Miners\",\n  \"Top Miners by extraData\": \"Top Miners by extraData\",\n  \"Top Miners by Address\": \"Top Miners by Address\",\n  \"Block Number\": \"Block Number\",\n  \"Hash\": \"Hash\",\n  \"Timestamp\": \"Timestamp\",\n  \"Transactions\": \"Transactions\",\n  \"Number\": \"Number\",\n  \"ParentHash\": \"ParentHash\",\n  \"Miner\": \"Miner\",\n  \"Nonce\": \"Nonce\",\n  \"Difficulty\": \"Difficulty\",\n  \"Extra Data\": \"Extra Data\",\n  \"State Root\": \"State Root\",\n  \"Transaction Root\": \"Transaction Root\",\n  \"Receipts Root\": \"Receipts Root\",\n  \"Block\": \"Block\",\n  \"Gas Used\": \"Gas Used\",\n  \"Cumulative Gas Used\": \"Cumulative Gas Used\",\n  \"Value in Ether\": \"Value in Ether\",\n  \"From\": \"From\",\n  \"To\": \"To\",\n  \"Contract Address\": \"Contract Address\",\n  \"Transaction Index\": \"Transaction Index\",\n  \"Receipt Status\": \"Receipt Status\",\n  \"Receipt Logs\": \"Receipt Logs\",\n  \"No Transactions for this block range.\": \"No Transactions for this block range.\",\n  \"Address\": \"Address\",\n  \"Balance\": \"Balance\",\n  \"Code\": \"Code\",\n  \"Configuration\": \"Configuration\",\n  \"Back\": \"Back\",\n  \"Ethereum RPC\": \"Ethereum RPC\",\n  \"Service Runner RPC\": \"Service Runner RPC\",\n};\n","export default {\n  // Moment integration\n  \"Timestamp Date\": \"{{date, date}}\",\n  // App Bar\n  \"Change Language\": \"언어 변경\",\n  \"Enter an Address, Transaction Hash or Block Number\": \"거래주소 해시값 혹은 블록번호 입력\",\n  \"JSON-RPC API Documentation\": \"JSON-RPC API 문서\",\n  \"Expedition Github\": \"Expedition Github\",\n  \"Toggle Dark Mode\": \"블랙모드 변경\",\n  // Dashboard\n  \"Block Height\": \"블록높이\",\n  \"Chain ID\": \"Chain ID\",\n  \"Syncing\": \"동기화\",\n  \"Gas Price\": \"Gas 비용\",\n  \"Network Hash Rate\": \"해시파워\",\n  \"Peers\": \"거점\",\n  \"Hash Rate\": \"Hash Rate\",\n  \"Transaction Count\": \"Transaction Count\",\n  \"Gas Usage\": \"Gas Usage\",\n  \"Uncles\": \"Uncles\",\n  \"Top Miners\": \"Top Miners\",\n  \"Top Miners by extraData\": \"Top Miners by extraData\",\n  \"Top Miners by Address\": \"Top Miners by Address\",\n  // block list\n  \"Block Number\": \"블록번호\",\n  \"Hash\": \"해시\",\n  \"Timestamp\": \"타임 스탬프\",\n  \"Transactions\": \"거래\",\n  // block view\n  \"Number\": \"수량\",\n  \"ParentHash\": \"ParentHash\",\n  \"Miner\": \"마이너\",\n  \"Nonce\": \"목하\",\n  \"Difficulty\": \"난이도\",\n  \"Extra Data\": \"추가 데이터\",\n  \"State Root\": \"주 루트\",\n  \"Transaction Root\": \"거래 루트\",\n  \"Receipts Root\": \"영수 루트\",\n  // transaction view\n  \"Block\": \"블록\",\n  \"Gas Used\": \"Gas 소모\",\n  \"Cumulative Gas Used\": \"누적 Gas소모\",\n  \"Value in Ether\": \"Ether값\",\n  \"From\": \"부터\",\n  \"To\": \"으로\",\n  \"Contract Address\": \"계약주소\",\n  \"Transaction Index\": \"거래 인덱스\",\n  \"Receipt Status\": \"수신상태\",\n  \"Receipt Logs\": \"수신일지\",\n  // address view\n  \"No Transactions for this block range.\": \"No Transactions for this block range.\",\n  \"Address\": \"주소\",\n  \"Balance\": \"잔액\",\n  \"Code\": \"코드\",\n  // configuration menu\n  \"Configuration\": \"구성\",\n  \"Back\": \"뒤로\",\n  \"Ethereum RPC\": \"Ethereum RPC\",\n  \"Service Runner RPC\": \"Service Runner RPC\",\n};\n","export default {\n  // Moment integration\n  \"Timestamp Date\": \"{{date, date}}\",\n  // App Bar\n  \"Change Language\": \"更改语言\",\n  \"Enter an Address, Transaction Hash or Block Number\": \"输入地址 交易哈希或区块号\",\n  \"JSON-RPC API Documentation\": \"JSON-RPC API 文档\",\n  \"Expedition Github\": \"Expedition Github\",\n  \"Toggle Dark Mode\": \"切换黑暗模式\",\n  // Dashboard\n  \"Block Height\": \"区块高度\",\n  \"Chain ID\": \"Chain ID\",\n  \"Syncing\": \"同步中\",\n  \"Gas Price\": \"Gas 费用\",\n  \"Network Hash Rate\": \"算力\",\n  \"Peers\": \"端点\",\n  \"Hash Rate\": \"Hash Rate\",\n  \"Transaction Count\": \"Transaction Count\",\n  \"Gas Usage\": \"Gas Usage\",\n  \"Uncles\": \"Uncles\",\n  \"Top Miners\": \"Top Miners\",\n  \"Top Miners by extraData\": \"Top Miners by extraData\",\n  \"Top Miners by Address\": \"Top Miners by Address\",\n  // block list\n  \"Block Number\": \"区块编号\",\n  \"Hash\": \"哈希\",\n  \"Timestamp\": \"时间戳\",\n  \"Transactions\": \"交易\",\n  // block view\n  \"Number\": \"数量\",\n  \"ParentHash\": \"父哈希\",\n  \"Miner\": \"矿工\",\n  \"Nonce\": \"随机数\",\n  \"Difficulty\": \"难度\",\n  \"Extra Data\": \"额外数据\",\n  \"State Root\": \"状态根\",\n  \"Transaction Root\": \"交易根\",\n  \"Receipts Root\": \"接收根\",\n  // transaction view\n  \"Block\": \"区块\",\n  \"Gas Used\": \"Gas 消耗\",\n  \"Cumulative Gas Used\": \"累计Gas消耗\",\n  \"Value in Ether\": \"Ether值\",\n  \"From\": \"从\",\n  \"To\": \"到\",\n  \"Contract Address\": \"合约地址\",\n  \"Transaction Index\": \"交易索引\",\n  \"Receipt Status\": \"接收状态\",\n  \"Receipt Logs\": \"接收日志\",\n  // address view\n  \"Address\": \"地址\",\n  \"Balance\": \"余额\",\n  \"Code\": \"代码\",\n  \"No Transactions for this block range.\": \"No Transactions for this block range.\",\n  // configuration menu\n  \"Configuration\": \"配置\",\n  \"Back\": \"返回\",\n  \"Ethereum RPC\": \"Ethereum RPC\",\n  \"Service Runner RPC\": \"Service Runner RPC\",\n};\n","import LanguageMenu from \"./LanguageMenu\";\nexport default LanguageMenu;\n","import * as React from \"react\";\nimport { Menu, MenuItem, Tooltip, Button } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport { supportedLanguages, reverseSupportedLanguages } from \"../../i18n\";\n\nconst LanguageMenu: React.FC = (props) => {\n  const { t, i18n } = useTranslation();\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuItemClick = (lang: string) => {\n    setAnchorEl(null);\n    // this forces language change for react + i18n react\n    i18n.changeLanguage(reverseSupportedLanguages[lang]);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <>\n      <Tooltip title={t(\"Change Language\") as string}>\n        <Button onClick={handleClick}>{supportedLanguages[i18n.language]}</Button>\n      </Tooltip>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {Object.values(supportedLanguages).map((lang, i) => (\n          <MenuItem onClick={(event) => handleMenuItemClick(lang)}>{lang}</MenuItem>\n        ))}\n      </Menu>\n    </>\n  );\n};\n\nexport default LanguageMenu;\n","import { History, LocationDescriptor, LocationDescriptorObject } from \"history\";\nimport queryString from \"query-string\";\n\ntype LocationState = History.LocationState;\n\ntype CreateHistory<O, H> = (options?: O) => History & H;\n\nfunction preserveQueryParameters(\n  history: History,\n  preserve: string[],\n  location: LocationDescriptorObject,\n): LocationDescriptorObject {\n  const currentQuery = queryString.parse(window.location.search);\n  if (currentQuery) {\n    const preservedQuery: { [key: string]: any } = {};\n    for (const p of preserve) {\n      const v = currentQuery[p];\n      if (v) {\n        preservedQuery[p] = v;\n      }\n    }\n    if (location.search) {\n      Object.assign(preservedQuery, queryString.parse(location.search));\n    }\n    location.search = queryString.stringify(preservedQuery);\n  }\n  return location;\n}\n\nfunction createLocationDescriptorObject(location: LocationDescriptor, state?: LocationState): LocationDescriptorObject {\n  return typeof location === \"string\" ? { pathname: location, state } : location;\n}\n\nexport function createPreserveQueryHistory<O, H>(\n  createHistory: CreateHistory<O, H>,\n  queryParameters: string[],\n): CreateHistory<O, H> {\n  return (options?: O) => {\n    const history = createHistory(options);\n    const oldPush = history.push;\n    const oldReplace = history.replace;\n    history.push = (path: LocationDescriptor, state?: LocationState) =>\n      oldPush.apply(history, [\n        preserveQueryParameters(history, queryParameters, createLocationDescriptorObject(path, state)),\n      ]);\n    history.replace = (path: LocationDescriptor, state?: LocationState) =>\n      oldReplace.apply(history, [\n        preserveQueryParameters(history, queryParameters, createLocationDescriptorObject(path, state)),\n      ]);\n    return history;\n  };\n}\n","import { createStore } from \"reusable\";\nimport useSpaceUser, { ILoginInfo } from \"../hooks/useSpaceUser\";\nimport { SpaceUser } from \"@spacehq/sdk\";\nimport { Dispatch } from \"react\";\n\nexport default createStore(() => {\n  const spaceUser = useSpaceUser() as [SpaceUser | undefined, Dispatch<ILoginInfo>, Dispatch<ILoginInfo>];\n  return spaceUser;\n});\n","import React, { Dispatch, useEffect } from \"react\";\nimport { Users, SpaceUser, VaultBackupType, BrowserStorage } from \"@spacehq/sdk\";\n\nexport interface ILoginInfo {\n  uuid: string;\n  passphrase: string;\n  backupType: VaultBackupType;\n}\n\nexport default function useSpaceUser(): [SpaceUser | undefined, Dispatch<ILoginInfo>, Dispatch<ILoginInfo>] {\n  const [users, setUsers] = React.useState<Users>();\n  const [user, setUser] = React.useState<SpaceUser>();\n  const [loginInfo, setLoginInfo] = React.useState<ILoginInfo>();\n  const [registerInfo, setRegisterInfo] = React.useState<ILoginInfo>();\n\n  /* const [userList, setUserList] = React.useState(); */\n\n  useEffect(() => {\n    const bs = new BrowserStorage();\n\n    const asyncStuff = async () => {\n      setUsers(await Users.withStorage(\n        bs,\n        { endpoint: \"wss://auth-dev.space.storage\" },\n      ));\n    };\n\n    asyncStuff();\n  }, []);\n\n  useEffect(() => {\n    if (users === undefined) { return; }\n    if (user !== undefined) { return; }\n\n    const authdUsers = users.list();\n    if (authdUsers.length > 0) {\n      setUser(authdUsers[0]);\n    }\n  }, [users, user]);\n\n  useEffect(() => {\n    if (users === undefined) { return; }\n    if (loginInfo === undefined) { return; }\n\n    users.recoverKeysByPassphrase(\n      loginInfo.uuid,\n      loginInfo.passphrase,\n      loginInfo.backupType,\n    )\n      .then(setUser);\n\n  }, [users, loginInfo]);\n\n  useEffect(() => {\n    if (users === undefined) { return; }\n    if (registerInfo === undefined) { return; }\n\n    users.createIdentity()\n      .then((ident) => {\n        return users.authenticate(ident);\n      })\n      .then((authdUser) => {\n        return setUser(authdUser);\n      });\n  }, [users, registerInfo]);\n\n  return [user, setLoginInfo, setRegisterInfo];\n}\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { ILoginInfo } from \"../../hooks/useSpaceUser\";\nimport { VaultBackupType } from \"@spacehq/sdk\";\n\ninterface IProps {\n  open: boolean;\n  onRegister: (registerInfo: ILoginInfo) => void;\n  onLogin: (loginInfo: ILoginInfo) => void;\n  onCancel: () => void;\n}\n\nconst LoginDialog: React.FC<IProps> = (props: IProps) => {\n  const [uuid, setUuid] = React.useState<string>();\n  const [passphrase, setPassphrase] = React.useState<string>();\n  const [backupType, setBackupType] = React.useState<VaultBackupType>(VaultBackupType.Email);\n\n  const handleRegister = () => {\n    if (uuid === undefined || passphrase === undefined || backupType === undefined) { return; }\n\n    const li = { uuid, passphrase, backupType };\n    props.onRegister(li);\n  };\n\n  const handleSubmit = () => {\n    if (uuid === undefined || passphrase === undefined || backupType === undefined) { return; }\n\n    const li = { uuid, passphrase, backupType };\n    props.onLogin(li);\n  };\n\n  return (\n    <>\n      <Dialog open={props.open} onClose={props.onCancel} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Login</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Pick a UUID, passphrase & recovery type\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"uuid\"\n            label=\"UUID\"\n            type=\"text\"\n            fullWidth\n            onChange={(v) => setUuid(v.target.value) }\n          />\n          <TextField\n            margin=\"dense\"\n            id=\"passphrase\"\n            label=\"Passphrase\"\n            type=\"password\"\n            fullWidth\n            onChange={(v) => setPassphrase(v.target.value) }\n          />\n          <TextField\n            margin=\"dense\"\n            id=\"backuptype\"\n            label=\"Backup type\"\n            defaultValue=\"Email\"\n            type=\"text\"\n            fullWidth\n            onChange={(v) => setBackupType(v.target.value as VaultBackupType.Email) }\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleRegister} color=\"primary\">\n            Register\n          </Button>\n          <Button onClick={handleSubmit} color=\"primary\">\n            Login\n          </Button>\n          <Button onClick={props.onCancel} color=\"secondary\">\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default LoginDialog;\n","import { AppBar, CssBaseline, Toolbar, Typography, IconButton, Grid, Tooltip, Button } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport Link from \"@material-ui/core/Link\";\nimport React, { useState, /* useEffect */ } from \"react\";\nimport { Link as RouterLink, Router, Route, Switch } from \"react-router-dom\";\nimport useDarkMode from \"use-dark-mode\";\nimport \"./App.css\";\nimport Dashboard from \"./containers/Dashboard\";\nimport { darkTheme, lightTheme } from \"./themes/jadeTheme\";\nimport Brightness3Icon from \"@material-ui/icons/Brightness3\";\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\nimport CodeIcon from \"@material-ui/icons/Code\";\nimport { useTranslation } from \"react-i18next\";\nimport LanguageMenu from \"./containers/LanguageMenu\";\nimport { createBrowserHistory } from \"history\";\nimport { QueryParamProvider } from \"use-query-params\";\nimport { createPreserveQueryHistory } from \"./helpers/createPreserveHistory\";\nimport fleekChatLogo from \"./fleekchat.png\";\nimport { UserStorage } from \"@spacehq/sdk\";\nimport { useInterval } from \"use-interval\";\nimport useSpaceUserStore from \"./stores/useSpaceUserStore\";\nimport LoginDialog from \"./components/LoginDialog/LoginDialog\";\nimport { ILoginInfo } from \"./hooks/useSpaceUser\";\n\nconst history = createPreserveQueryHistory(createBrowserHistory, [\"network\", \"rpcUrl\"])();\n\nfunction App(props: any) {\n  const { t } = useTranslation();\n  const darkMode = useDarkMode();\n  const theme = darkMode.value ? darkTheme : lightTheme;\n\n  const [user, setLoginInfo, setRegisterInfo] = useSpaceUserStore();\n  /* const [storage, setStorage] = useState<UserStorage>(); */\n\n  const [loginDialogOpen, setLoginDialogOpen] = useState<boolean>(false);\n\n  const submitRegisterDialog = (registerInfo: ILoginInfo) => {\n    setLoginDialogOpen(false);\n    setRegisterInfo(registerInfo);\n  };\n\n  const cancelLoginDialog = () => {\n    setLoginDialogOpen(false);\n  };\n\n  const submitLoginDialog = (loginInfo: ILoginInfo) => {\n    setLoginDialogOpen(false);\n    setLoginInfo(loginInfo);\n  };\n\n  useInterval(() => {\n    if (user === undefined) { return; }\n\n    const store = new UserStorage(user);\n    store.listDirectory({ bucket: \"fleekchat\", path: \"\" }).then((res) => {\n      /* debugger;\n       * console.log(res); */\n    });\n\n  }, 10000, true);\n\n  return (\n    <Router history={history}>\n      <ThemeProvider theme={theme}>\n        <AppBar position=\"sticky\" color=\"default\" elevation={0}>\n          <Toolbar>\n            <Grid justify=\"space-between\" alignItems=\"center\" alignContent=\"center\" container>\n              <Grid item style={{ marginTop: \"8px\" }}>\n                <Link\n                  component={({ className, children }: { children: any, className: string }) => (\n                    <RouterLink className={className} to={\"/\"}>\n                      {children}\n                    </RouterLink>\n                  )}>\n                  <Grid container>\n                    <Grid>\n                      <img\n                        alt=\"expedition-logo\"\n                        height=\"30\"\n                        style={{ marginRight: \"10px\" }}\n                        src={fleekChatLogo}\n                      />\n                    </Grid>\n                    <Grid>\n                      <Typography color=\"textSecondary\" variant=\"h6\">\n                        {t(\"FleekChat\")}\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                </Link>\n              </Grid>\n              <Grid item>\n                {\n                  user ?\n                  undefined :\n                  <Button variant=\"outlined\" onClick={() => setLoginDialogOpen(true)}>\n                    Login\n                  </Button>\n                }\n                <LanguageMenu />\n                <Tooltip title={t(\"FleekChat Github\") as string}>\n                  <IconButton\n                    onClick={() =>\n                      window.open(\"https://github.com/xops/fleekchat\")\n                    }>\n                    <CodeIcon />\n                  </IconButton>\n                </Tooltip>\n                <Tooltip title={t(\"Toggle Dark Mode\") as string}>\n                  <IconButton onClick={darkMode.toggle}>\n                    {darkMode.value ? <Brightness3Icon /> : <WbSunnyIcon />}\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </Toolbar>\n        </AppBar>\n        <LoginDialog\n          open={loginDialogOpen}\n          onRegister={submitRegisterDialog}\n          onLogin={submitLoginDialog}\n          onCancel={cancelLoginDialog}\n        />\n        <div style={{ margin: \"0px 25px 0px 25px\" }}>\n          <QueryParamProvider ReactRouterRoute={Route}>\n            <CssBaseline />\n            <Switch>\n              <Route path={\"/\"} component={Dashboard} exact={true} />\n            </Switch>\n          </QueryParamProvider>\n        </div>\n      </ThemeProvider >\n    </Router >\n  );\n}\n\nexport default App;\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { I18nextProvider } from \"react-i18next\";\nimport i18n from \"i18next\";\nimport { ReusableProvider } from \"reusable\";\nimport \"./i18n\";\n\nReactDOM.render(\n  <I18nextProvider i18n={i18n}>\n    <ReusableProvider>\n      <App />\n    </ReusableProvider>\n  </I18nextProvider>,\n  document.getElementById(\"root\") as HTMLElement,\n);\n"],"sourceRoot":""}